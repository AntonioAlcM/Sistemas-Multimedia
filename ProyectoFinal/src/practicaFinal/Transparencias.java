/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practicaFinal;

import java.awt.AlphaComposite;
import java.awt.Composite;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import sm.AAM.graficos.Atributo;
import sm.AAM.graficos.Forma;

/**
 * Clase que crea una ventana interna, en dicha ventana interna podremos
 * modificar el valor de la transparencia
 *
 * @author Antonio
 */
public class Transparencias extends javax.swing.JInternalFrame {

    private VentanaInterna vi;
    private Forma figuraTransparencia;
    private Composite comp = null;
    private Composite comp_original = null;
    private float transparencia = 1.0f;
    private List<Atributo> atributos = new ArrayList();

    /**
     * Crea un objeto de tipo Transparencias, se le pasa como parámetro una
     * ventanaInterna
     *
     * @param ventanaInterna - JInternalframe de tipo ventanaInterna
     */
    public Transparencias(VentanaInterna ventanaInterna) {
        initComponents();
        this.vi = ventanaInterna;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSliderTransparencia = new javax.swing.JSlider();
        jPanel1 = new javax.swing.JPanel();
        jAceptar = new javax.swing.JButton();
        jCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Transparencia");
        setMaximumSize(new java.awt.Dimension(216, 105));
        setMinimumSize(new java.awt.Dimension(216, 105));
        setPreferredSize(new java.awt.Dimension(216, 105));
        getContentPane().setLayout(new java.awt.BorderLayout(1, 1));

        jSliderTransparencia.setMajorTickSpacing(10);
        jSliderTransparencia.setPaintTicks(true);
        jSliderTransparencia.setSnapToTicks(true);
        jSliderTransparencia.setValue(100);
        jSliderTransparencia.setMaximumSize(new java.awt.Dimension(200, 26));
        jSliderTransparencia.setMinimumSize(new java.awt.Dimension(200, 26));
        jSliderTransparencia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderTransparenciaStateChanged(evt);
            }
        });
        jSliderTransparencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSliderTransparenciaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSliderTransparenciaFocusLost(evt);
            }
        });
        getContentPane().add(jSliderTransparencia, java.awt.BorderLayout.LINE_END);

        jPanel1.setMinimumSize(new java.awt.Dimension(190, 23));
        jPanel1.setLayout(new java.awt.GridLayout());

        jAceptar.setText("Aceptar");
        jAceptar.setMaximumSize(new java.awt.Dimension(75, 33));
        jAceptar.setMinimumSize(new java.awt.Dimension(75, 33));
        jAceptar.setPreferredSize(new java.awt.Dimension(75, 33));
        jAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAceptarActionPerformed(evt);
            }
        });
        jPanel1.add(jAceptar);

        jCancelar.setText("Cancelar");
        jCancelar.setMaximumSize(new java.awt.Dimension(75, 33));
        jCancelar.setMinimumSize(new java.awt.Dimension(75, 33));
        jCancelar.setPreferredSize(new java.awt.Dimension(75, 33));
        jCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(jCancelar);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Acepta los cambios producidos y cierra la ventana
     *
     * @param evt - Evento producido por el ratón
     */
    private void jAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAceptarActionPerformed
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(Redimensionar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jAceptarActionPerformed
    /**
     * Establece el valor de la transparencia, este valor va cambiando conforme
     * mueves el slider, mietras vas moviendo el slider la imagen se va
     * repintando la imagen
     *
     * @param evt - Evento producido por el ratón
     */
    private void jSliderTransparenciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderTransparenciaStateChanged
        transparencia = (this.jSliderTransparencia.getValue() / 100.0f);
        this.comp = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, transparencia);
        if (figuraTransparencia != null) {
            for (Atributo s : atributos) {
                s.setTransparencia(comp);
            }
            ((VentanaInternaImagen) vi).getLienzo().repaint();
        }
    }//GEN-LAST:event_jSliderTransparenciaStateChanged
    /**
     * Cuando pinchas en el slider, obtienes la forma actual y los atributos de
     * esa forma
     *
     * @param evt - Evento producido por el ratón
     */
    private void jSliderTransparenciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderTransparenciaFocusGained
        figuraTransparencia = ((VentanaInternaImagen) vi).getLienzo().getFigura();
        if (figuraTransparencia != null) {
            atributos = figuraTransparencia.getAtributos();
            comp_original = figuraTransparencia.getAtributos().get(0).getTransparencia();
        }

    }//GEN-LAST:event_jSliderTransparenciaFocusGained
    /**
     * Cuando pichas fuera del slider se borra la figura seleccionada.
     *
     * @param evt - Evento producido por el ratón
     */
    private void jSliderTransparenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSliderTransparenciaFocusLost
        figuraTransparencia = null;
    }//GEN-LAST:event_jSliderTransparenciaFocusLost
    /**
     * Cancelas la trasparencia que estas llevando a cabo
     *
     * @param evt - Evento producido por el ratón
     */
    private void jCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelarActionPerformed
        figuraTransparencia = ((VentanaInternaImagen) vi).getLienzo().getFigura();
        if (figuraTransparencia != null) {
            for (Atributo s : atributos) {
                s.setTransparencia(comp_original);
            }
            ((VentanaInternaImagen) vi).getLienzo().repaint();
        }
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(Redimensionar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAceptar;
    private javax.swing.JButton jCancelar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider jSliderTransparencia;
    // End of variables declaration//GEN-END:variables
}
