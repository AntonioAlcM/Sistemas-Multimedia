/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practicaFinal;

import java.io.File;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;
import sm.sound.SMClipPlayer;
import sm.sound.SMPlayer;

/**
 *
 * @author Antonio
 */
public class VentanaInternaSonido extends VentanaInterna {

    private SMPlayer player;
    private File grabar;
    private File archivoSonido;
    private Clip clip = null;
    private javax.swing.JToggleButton jPlayAudio;
    private javax.swing.JToggleButton jStopAudio;
    private javax.swing.JToggleButton jGrabarAudio;

    /**
     * Crea un objeto de tipo VentanaInternaSonido, se le pasa como parámetro
     * una archivo
     *
     * @param f - Archivo de tipo File
     */
    public VentanaInternaSonido(File f) {
        this.archivoSonido = f;
        initComponents();
        player = new SMClipPlayer(f);
        ((SMClipPlayer) player).setLineListener(new ManejadorAudio());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonesReproduccion = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jProgressAudio = new javax.swing.JProgressBar();
        jTiempoMusica = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(269, 280));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(2, 1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fine lines vector background.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(198, 250));
        jLabel1.setMinimumSize(new java.awt.Dimension(100, 198));
        jLabel1.setPreferredSize(new java.awt.Dimension(170, 220));
        getContentPane().add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(250, 28));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jPanel1.add(jProgressAudio);

        jTiempoMusica.setPreferredSize(new java.awt.Dimension(80, 25));
        jPanel1.add(jTiempoMusica);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Cuando cierras la ventana si el audio o la grabadora estuviera activa se
     * cerraría.
     *
     * @param evt - Evento producido por el ratón
     */
    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        player.stop();
    }//GEN-LAST:event_formInternalFrameClosing

    /**
     * Creas un manejador de eventos
     */
    class ManejadorAudio implements LineListener {

        public void update(LineEvent event) {
            if (event.getType() == LineEvent.Type.START) {
                String segundosFinales;
                clip = ((SMClipPlayer) player).getClip();
                int minutoFinal = (int) (clip.getMicrosecondLength() / 1000000) / 60;
                int segundosFinal = (int) (clip.getMicrosecondLength() / 1000000) % 60;
                if (segundosFinal <= 9) {
                    segundosFinales = "0" + Integer.toString(segundosFinal);
                } else {
                    segundosFinales = Integer.toString(segundosFinal);
                }
                while (clip.isRunning()) {
                    jProgressAudio.setMaximum((int) clip.getMicrosecondLength());
                    jProgressAudio.setValue((int) clip.getMicrosecondPosition());
                    int minutoInicio = (int) (clip.getMicrosecondPosition() / 1000000) / 60;
                    int segundosInicio = (int) (clip.getMicrosecondPosition() / 1000000) % 60;

                    if (segundosInicio <= 9) {
                        jTiempoMusica.setText(minutoInicio + ":0" + segundosInicio + "/" + minutoFinal + ":" + segundosFinales);
                    } else {
                        jTiempoMusica.setText(minutoInicio + ":" + segundosInicio + "/" + minutoFinal + ":" + segundosFinales);
                    }
                }
            }
            if (event.getType() == LineEvent.Type.STOP) {
                jStopAudio.setSelected(true);
                player.stop();
                jProgressAudio.setValue(0);
            }
            if (event.getType() == LineEvent.Type.CLOSE) {

            }
        }
    }

    /**
     * Devuelve el player del audio
     *
     * @return - Devuelve un player
     */
    public SMPlayer getPlayer() {
        return this.player;
    }

    /**
     * Le pasamos un boton play a la ventana
     *
     * @param jPlayAudio - ToggleButton
     */
    public void setPlay(javax.swing.JToggleButton jPlayAudio) {
        this.jPlayAudio = jPlayAudio;
    }

    /**
     * Le pasamos un boton stop a la ventana
     *
     * @param jStopAudio - ToggleButton
     */
    public void setStop(javax.swing.JToggleButton jStopAudio) {
        this.jStopAudio = jStopAudio;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BotonesReproduccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressAudio;
    private javax.swing.JLabel jTiempoMusica;
    // End of variables declaration//GEN-END:variables

}
